@startuml

title Архитектура социальной сети

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2

!include DEVICONS/go.puml
!include DEVICONS/python.puml
!include DEVICONS2/cplusplus.puml

!include DEVICONS/postgresql.puml
!include DEVICONS/mongodb.puml

!include <cloudinsight/kafka>

Person(user, "User", "Social network's user")

Container(frontend, "Frontend", "Deleted info")
Container(mainService, "Main service", "golang", "Provides api, handles registration and authentification", "go")
Container(statisticsService, "Statistics service", "c++", "Handles likes and views", "cplusplus")
Container(commentsPostsService, "Posts and comments service", "python", "Manages posts and comments", "python")
Container(broker, "broker", "Kafka", "", "kafka")

ContainerDb(commentsPostsDB, "Comments and posts DB", "MongoDB", "Stores posts and comments", "mongodb")
ContainerDb(statisticsDB, "Likes and views DB", "ClickHouse", "Stores statistics")
ContainerDb(authDB, "auth DB", "PostgresDB", "Stores auth informations", "postgresql")



Rel(user, frontend, "Requests")
Rel(frontend, mainService, "Requests", "REST API")

Rel(mainService, authDB, "Registrations and authorization info")
Rel(commentsPostsService, commentsPostsDB, "Comments and posts info")
Rel(statisticsService, statisticsDB, "Likes and views info")

Rel(mainService, broker, "Sends new likes and views")
Rel(mainService, statisticsService, "Gets statistics about likes and views", "grpc")
Rel(mainService, commentsPostsService, "Saves and gets comments and posts", "grpc")
Rel(broker, statisticsService, "Likes and views updates")
@enduml